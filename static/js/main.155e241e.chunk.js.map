{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/NavbarScore/index.js","components/Footer/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","shuffleFriend","id","alt","name","src","image","Wrapper","children","NavbarScore","href","total","status","Footer","App","state","friends","clickedFriends","score","maxScore","includes","setState","push","length","i","j","Math","floor","random","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"sq4DAeeA,MAZf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,0BAAMC,QAAS,kBAAMF,EAAMG,cAAcH,EAAMI,KAAKH,UAAU,WAC5D,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,Y,MCD5BC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCe1BC,G,MAfK,SAAAX,GAAK,OACvB,yBAAKC,UAAU,+CACb,uBAAGA,UAAU,eAAeW,KAAK,KAC/B,4DAEF,yBAAKX,UAAU,2BAA2BG,GAAG,0BAC3C,wBAAIH,UAAU,uBACd,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,aAAd,cAAsCD,EAAMa,OAC5C,wBAAIZ,UAAU,UAAUD,EAAMc,a,MCAvBC,MAVf,WACE,OACE,4BAAQX,GAAG,gBAAgBH,UAAU,8BACnC,yBAAKA,UAAU,yBACb,gE,eC+EOe,E,2MA5EbC,MAAQ,CACNC,UACAC,eAAgB,GAChBC,MAAO,EACPC,SAAU,I,EAGZlB,cAAgB,SAAAC,GACd,IAAIe,EAAiB,EAAKF,MAAME,eAEhC,GAAIA,EAAeG,SAASlB,GAC1B,EAAKmB,SAAS,CACZJ,eAAgB,GAChBC,MAAO,EACPN,OAAQ,oBAMV,GAFAK,EAAeK,KAAKpB,GAEU,KAA1Be,EAAeM,OAAnB,CASA,EAAKF,SAAS,CACZL,UACAC,iBACAC,MAAOD,EAAeM,OACtBX,OAAQ,MAGV,IAAK,IAAIY,EAAIR,EAAQO,OAAS,EAAGC,EAAI,EAAGA,IAAK,CAC3C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADG,EAEhB,CAACR,EAAQS,GAAIT,EAAQQ,IAA/CR,EAAQQ,GAFkC,KAE9BR,EAAQS,GAFsB,WAf3C,EAAKJ,SAAS,CACZH,MAAO,GACPN,OAAQ,4BACRK,eAAgB,M,wEAoBd,IAAD,OACP,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,CACEY,MAAOkB,KAAKd,MAAMG,MAClBC,SAAU,GACVP,OAAQiB,KAAKd,MAAMH,SAErB,4BAAQb,UAAU,cAChB,uBAAGA,UAAU,aAAb,6EAKF,yBAAKA,UAAU,aACb,kBAAC,EAAD,KACG8B,KAAKd,MAAMC,QAAQc,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACE9B,cAAe,EAAKA,cACpBC,GAAI6B,EAAO7B,GACX8B,IAAKD,EAAO7B,GACZI,MAAOyB,EAAOzB,aAKtB,kBAAC,EAAD,W,GAxEU2B,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.155e241e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <span onClick={() => props.shuffleFriend(props.id)} className=\"shuffle\">\n          <img alt={props.name} src={props.image} />\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n//stateless component\nconst NavbarScore = props => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a className=\"navbar-brand\" href=\"#\">\n      <h3> Walking Dead Clicky Game! </h3>\n    </a>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav mr-auto\"></ul>\n      <div className=\"currentScore\">\n        <h3 className=\"userScore\">Your Score {props.total}</h3>\n        <h3 className=\"status\">{props.status}</h3>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default NavbarScore;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer id=\"sticky-footer\" className=\"py-4 bg-dark text-white-50\">\n      <div className=\"container text-center\">\n        <small>Copyright &copy; Clicky Game</small>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport NavbarScore from \"./components/NavbarScore\";\nimport Footer from \"./components/Footer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedFriends: [],\n    score: 0,\n    maxScore: 12\n  };\n\n  shuffleFriend = id => {\n    let clickedFriends = this.state.clickedFriends;\n\n    if (clickedFriends.includes(id)) {\n      this.setState({\n        clickedFriends: [],\n        score: 0,\n        status: \"Game Over!\"\n      });\n      return;\n    } else {\n      clickedFriends.push(id);\n\n      if (clickedFriends.length === 12) {\n        this.setState({\n          score: 12,\n          status: \"Congratulations, You Won!\",\n          clickedFriends: []\n        });\n        return;\n      }\n\n      this.setState({\n        friends,\n        clickedFriends,\n        score: clickedFriends.length,\n        status: \" \"\n      });\n\n      for (let i = friends.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [friends[i], friends[j]] = [friends[j], friends[i]];\n      }\n    }\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div className=\"App\">\n        <NavbarScore\n          total={this.state.score}\n          maxScore={12}\n          status={this.state.status}\n        />\n        <header className=\"App-header\">\n          <p className=\"App-intro\">\n            Click on an image to earn points, but don't click on any more than\n            once!\n          </p>\n        </header>\n        <div className=\"container\">\n          <Wrapper>\n            {this.state.friends.map(friend => (\n              <FriendCard\n                shuffleFriend={this.shuffleFriend}\n                id={friend.id}\n                key={friend.id}\n                image={friend.image}\n              />\n            ))}\n          </Wrapper>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}